# Managed by Puppet. All local changes will be overwritten.
#
user  nginx;
worker_processes  1;  

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events 
{
    worker_connections  1024;
}


http 
{
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on; 
    #tcp_nopush     on; 

    keepalive_timeout  65; 

    #gzip  on; 

    include /etc/nginx/conf.d/*.conf;

	upstream gitlab 
    {
		server unix:/home/gitlab/gitlab/tmp/sockets/gitlab.socket;
	}

	server 
    {
		listen <%= scope.lookupvar("gitlab::host_ip") %>:<%= scope.lookupvar("gitlab::http_port") %>;         # e.g., listen 192.168.1.1:80;
		server_name <%= scope.lookupvar("gitlab::host") %>;     # e.g., server_name source.example.com;
		root /home/gitlab/gitlab/public;

		# individual nginx logs for this gitlab vhost
		access_log  /var/log/nginx/gitlab_access.log;
		error_log   /var/log/nginx/gitlab_error.log;

		location / 
        {
			# serve static files from defined root folder;.
			# @gitlab is a named location for the upstream fallback, see below
			try_files $uri $uri/index.html $uri.html @gitlab;
		}

		# if a file, which is not found in the root folder is requested, 
		# then the proxy pass the request to the upsteam (gitlab unicorn)
		location @gitlab 
        {
			proxy_redirect     off;

			# you need to change this to "https", if you set "ssl" directive to "on"
			proxy_set_header   X-FORWARDED_PROTO http;
			proxy_set_header   Host              $http_host;
			proxy_set_header   X-Real-IP         $remote_addr;

			proxy_pass http://gitlab;
		}
	}
}
